type ICPTs = record {
     doms : nat64;
};

type BlockHeight = nat64;
type Certification = nat64;
type Memo = nat64;
type SystemTime = nat64;

type Block = record {
    transaction: Transaction;
    timestamp: SystemTime;
};

type Transfer = variant {
    Burn: record {
        from: principal;
        amount: ICPTs;
    };
    Mint: record {
        to: principal;
        amount: ICPTs;
    };
    Send: record {
        from: principal;
        to: principal;
        amount: ICPTs;
    };
};

type Transaction = record {
    transfer: Transfer;
    memo: Memo;
    created_at: BlockHeight;
}

service: (minting_canister: principal, initial_values: vec record {0: principal; 1: ICPTs}, opt_archive_canister: opt principal, opt_max_message_size_bytes: opt nat32) -> {
  send : (Memo, ICPTs, ICPTs, principal, opt nat64) -> (nat64);
  account_balance : (principal) -> (ICPTs) query;
  tip_of_chain : () -> (Certification, BlockHeight) query;
  block : (BlockHeight) -> (opt Block) query;
}
