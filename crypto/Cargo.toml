[package]
name = "ic-crypto"
version = "0.8.0"
edition = "2018"

[dependencies]
arrayvec = "0.5.1"
async-trait = "0.1.41"
base64 = "0.11.0"
clap = "2.33.3"
ed25519-dalek = "1.0.1"
hex = "0.4.2"
ic-config = { path = "../config" }
ic-crypto-internal-basic-sig-ed25519 = { path = "internal/crypto_lib/basic_sig/ed25519" }
ic-crypto-internal-csp = { path = "internal/crypto_service_provider" }
ic-crypto-internal-fs-ni-dkg = { path = "internal/crypto_lib/fs_ni_dkg" }
ic-crypto-internal-logmon = { path = "internal/logmon" }
ic-crypto-internal-multi-sig-bls12381 = { path = "internal/crypto_lib/multi_sig/bls12_381" }
ic-crypto-internal-threshold-sig-bls12381 = { path = "internal/crypto_lib/threshold_sig/bls12_381" }
ic-crypto-internal-basic-sig-iccsa = { path = "internal/crypto_lib/basic_sig/iccsa" }
ic-crypto-internal-test-vectors = { path = "internal/test_vectors" }
ic-crypto-internal-types = { path = "internal/crypto_lib/types" }
ic-crypto-sha = { path = "sha" }
ic-crypto-tls-cert-validation = { path = "node_key_validation/tls_cert_validation" }
ic-crypto-tls-interfaces = { path = "tls_interfaces" }
ic-crypto-utils-basic-sig = { path = "utils/basic_sig" }
ic-interfaces = { path = "../interfaces" }
ic-logger = { path = "../monitoring/logger" }
ic-metrics = { path = "../monitoring/metrics" }
ic-protobuf = { path = "../protobuf" }
ic-registry-client = { path = "../registry/client" }
ic-registry-common = { path = "../registry/common" }
ic-registry-keys = { path = "../registry/keys" }
ic-types = { path = "../types/types" }
ic-utils = { path = "../utils" }
lazy_static = "1.4.0"
libsecp256k1 = "0.5.0"
miracl_core = { version = "4.1.0", package = "miracl_core_bls12381" }
num-integer = "0.1.41"
openssl = "0.10.29"
parking_lot = "0.11.1"
phantom_newtype = { path = "../phantom_newtype" }
prometheus = { version = "0.12.0", features = [ "process" ] }
prost = "0.9.0"
prost-types = "0.9.0"
rand = "0.7.3"
rand_chacha = "0.2.2"
rand_core = "0.5.1"
serde = { version = "1.0.99", features = [ "derive" ] }
serde_bytes = "0.11"
serde_cbor = "0.11.1"
serde_json = "1.0.40"
simple_asn1 = "0.5.4"
slog = { version = "2.5.2", features = ["nested-values", "max_level_trace", "release_max_level_debug"] }
slog-scope = "4.1.2"
strum = "0.18.0"
strum_macros = "0.18.0"
tecdsa = { path = "internal/crypto_lib/threshold_sig/tecdsa" }
tempfile = "3.1.0"
tokio = { version = "1.9.0", features = ["full"] }
tokio-openssl = "0.6.0"
# We use the `dangerous_configuration` flag for rustls to be able to set custom `ClientCertVerifier` and
# `ServerCertVerifier` in order to verify node certificates.
tokio-rustls = { version = "0.22.0", features = ["dangerous_configuration"] }
zeroize = { version = "1.4.3", features = ["zeroize_derive"] }

[build-dependencies]
prost-build = "0.9.0"

[dev-dependencies]
criterion = "0.3.4"
ic-base-types = { path = "../types/base_types" }
ic-crypto-internal-basic-sig-der-utils = { path = "internal/crypto_lib/basic_sig/der_utils" }
ic-crypto-internal-basic-sig-ecdsa-secp256r1 = { path = "internal/crypto_lib/basic_sig/ecdsa_secp256r1" }
ic-crypto-internal-basic-sig-rsa-pkcs1 = { path = "internal/crypto_lib/basic_sig/rsa_pkcs1" }
ic-crypto-internal-csp-test-utils = { path = "internal/csp_test_utils" }
ic-crypto-test-utils = { path = "test_utils" }
ic-crypto-test-utils-multi-sigs = { path = "test_utils/multi_sigs" }
ic-crypto-test-utils-threshold-sigs = { path = "test_utils/threshold_sigs" }
ic-crypto-test-utils-canister-threshold-sigs = { path = "test_utils/canister_threshold_sigs" }
ic-test-utilities = { path = "../test_utilities" }
json5 = "0.2.7"
maplit = "1.0.2"
mockall = "0.8.3"
proptest = "0.9.4"
proptest-derive = "0.1.0"
rsa = "0.3.0"

[[bench]]
name = "basic_sig"
harness = false

[[bench]]
name = "hash"
harness = false

[[bench]]
name = "threshold_sig"
harness = false

[[bench]]
name = "ni_dkg"
harness = false

[[bench]]
name = "multi_sig"
harness = false
